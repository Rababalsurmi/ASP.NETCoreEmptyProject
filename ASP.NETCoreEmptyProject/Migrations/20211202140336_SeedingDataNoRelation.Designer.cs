// <auto-generated />
using ASP.NETCoreEmptyProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP.NETCoreEmptyProject.Migrations
{
    [DbContext(typeof(PeopleDBContext))]
    [Migration("20211202140336_SeedingDataNoRelation")]
    partial class SeedingDataNoRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ASP.NETCoreEmptyProject.Models.CityModel", b =>
                {
                    b.Property<string>("City")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("CityNum")
                        .HasColumnType("int")
                        .HasMaxLength(6);

                    b.HasKey("City");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            City = "Stockholm",
                            CityNum = 0
                        },
                        new
                        {
                            City = "Frankfurt",
                            CityNum = 0
                        },
                        new
                        {
                            City = "Oslo",
                            CityNum = 0
                        });
                });

            modelBuilder.Entity("ASP.NETCoreEmptyProject.Models.CountryModel", b =>
                {
                    b.Property<string>("Country")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Country");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Country = "Sweden"
                        },
                        new
                        {
                            Country = "Germany"
                        },
                        new
                        {
                            Country = "Norway"
                        });
                });

            modelBuilder.Entity("ASP.NETCoreEmptyProject.Models.LanguageModel", b =>
                {
                    b.Property<string>("Language")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Language");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Language = "English"
                        },
                        new
                        {
                            Language = "German"
                        },
                        new
                        {
                            Language = "Norwegian"
                        });
                });

            modelBuilder.Entity("ASP.NETCoreEmptyProject.Models.PersonModel", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasMaxLength(10)
                        .HasDefaultValue(0);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Phone")
                        .HasColumnType("int")
                        .HasMaxLength(10);

                    b.HasKey("PersonId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            City = "Skövde",
                            Name = "Tom",
                            Phone = 712345678
                        },
                        new
                        {
                            PersonId = 2,
                            City = "Kungälv",
                            Name = "John",
                            Phone = 712345678
                        },
                        new
                        {
                            PersonId = 3,
                            City = "Göteborg",
                            Name = "Jonas",
                            Phone = 712345678
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
